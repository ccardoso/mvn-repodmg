package healthy.rim.type;import javax.xml.bind.annotation.XmlAccessType;import javax.xml.bind.annotation.XmlAccessorType;import javax.xml.bind.annotation.XmlElement;import javax.xml.bind.annotation.XmlRootElement;import javax.xml.bind.annotation.XmlType;/** * An Interval (start to end, minimum to maximum) of values. * * @author Yosvany Llerena Rodr√≠guez <yosvanyllr@gmail.com> * @since 30-Jan-2013 */@XmlRootElement(name = "Interval")@XmlAccessorType(XmlAccessType.FIELD)@XmlType(name = "Interval")public class IVL<RimDataType> {    @XmlElement(name = "lower", required = true)    private RimDataType lower;    @XmlElement(name = "upper", required = true)    private RimDataType upper;    public IVL() {    }    public IVL(RimDataType lower, RimDataType upper) {        this.lower = lower;        this.upper = upper;    }    public RimDataType getLower() {        return lower;    }    public void setLower(RimDataType lower) {        this.lower = lower;    }    public RimDataType getUpper() {        return upper;    }    public void setUpper(RimDataType upper) {        this.upper = upper;    }    @Override    public String toString() {        return (lower.toString() + ", " + upper.toString());    }    @Override    public int hashCode() {        int hash = 5;        hash = 83 * hash + (this.lower != null ? this.lower.hashCode() : 0);        hash = 83 * hash + (this.upper != null ? this.upper.hashCode() : 0);        return hash;    }    @Override    public boolean equals(Object obj) {        if (obj == null) {            return false;        }        if (getClass() != obj.getClass()) {            return false;        }        final IVL<RimDataType> other = (IVL<RimDataType>) obj;        if (this.lower != other.lower && (this.lower == null || !this.lower.equals(other.lower))) {            return false;        }        if (this.upper != other.upper && (this.upper == null || !this.upper.equals(other.upper))) {            return false;        }        return true;    }}